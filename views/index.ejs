<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Calculator</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            width: 100vw;
            overflow-x: hidden;
        }

        .content {
            width: 100%;
            padding: 10px;
        }

        .table-container {
            position: relative;
            overflow-x: auto;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            padding: 0;
            width: 100%;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        .fixed-header {
            position: sticky;
            top: 0;
            background: #3498db;
            color: white;
            z-index: 1000;
        }

        th, td {
            padding: 15px 20px;
            text-align: left;
            border: 1px solid #ddd;
        }

        th {
            font-weight: 600;
            font-size: 18px;
        }

        td {
            font-size: 16px;
        }

        input {
            width: 95%; /* Increased width to take more space */
            padding: 12px 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
        }

        input:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 5px rgba(52,152,219,0.3);
        }

        .button-container {
            display: flex;
            gap: 15px;
            margin: 20px 0;
            flex-wrap: wrap;
        }

        .add-row-btn,
        .screenshot-btn {
            flex: 1;
            padding: 15px 20px;
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 18px;
            transition: background-color 0.3s;
            font-weight: 500;
        }

        .add-row-btn {
            background: #2ecc71;
        }

        .add-row-btn:hover {
            background: #27ae60;
        }

        .screenshot-btn {
            background: #3498db;
        }

        .screenshot-btn:hover {
            background: #2980b9;
        }

        .delete-btn {
            background: none;
            color: #ff4757;
            padding: 5px;
            border-radius: 50%;
            cursor: pointer;
            text-align: center;
            font-size: 20px;
            font-weight: bold;
            width: 30px;
            height: 30px;
            line-height: 30px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .delete-btn:hover {
            background: #ff4757;
            color: white;
        }

        .totals {
            background: white;
            padding: 20px;
            border-radius: 12px;
            margin-top: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .total-row {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            font-size: 18px;
            font-weight: 500;
        }

        .col-name { width: 40%; }
        .col-weight { width: 20%; }
        .col-rate { width: 20%; }
        .col-total { width: 15%; }
        .col-actions { width: 5%; }

        @media screen and (max-width: 768px) {
            th, td {
                padding: 12px;
                font-size: 14px;
            }

            input {
                padding: 10px;
                font-size: 14px;
            }

            .total-row {
                font-size: 16px;
            }

            .button-container {
                flex-direction: column;
            }

            .add-row-btn,
            .screenshot-btn {
                width: 100%;
                padding: 12px;
                font-size: 16px;
            }
        }
    </style>
</head>
<body>
    <div class="content">
        <div class="table-container">
            <table>
                <thead class="fixed-header">
                    <tr>
                        <th class="col-name">Item Name</th>
                        <th class="col-weight">Weight</th>
                        <th class="col-rate">Rate</th>
                        <th class="col-total">Total</th>
                        <th class="col-actions"></th>
                    </tr>
                </thead>
                <tbody id="product-list">
                    <!-- Product rows will be added here -->
                </tbody>
            </table>
        </div>

        <div class="button-container">
            <button class="add-row-btn" onclick="addProduct()">Add New Row</button>
            <button class="screenshot-btn" onclick="takeScreenshot()">Take Screenshot</button>
        </div>

        <div class="totals">
            <div class="total-row">
                <span>Total Weight:</span>
                <span id="total-weight">0.00</span>
            </div>
            <div class="total-row">
                <span>Total Cost:</span>
                <span id="total-cost">0.00</span>
            </div>
        </div>
    </div>

    <script>
        let productIndex = 0;

        function addProduct() {
            const productList = document.getElementById('product-list');
            const row = document.createElement('tr');
            row.innerHTML = `
                <td class="col-name">
                    <input type="text" name="products[${productIndex}][name]" required>
                </td>
                <td class="col-weight">
                    <input type="number" name="products[${productIndex}][weight]" 
                           step="0.01" required oninput="calculateRowTotal(this)">
                </td>
                <td class="col-rate">
                    <input type="number" name="products[${productIndex}][rate]" 
                           step="0.01" required oninput="calculateRowTotal(this)">
                </td>
                <td class="col-total row-total">0.00</td>
                <td class="col-actions">
                    <div class="delete-btn" onclick="removeProduct(this)">Ã—</div>
                </td>
            `;
            productList.appendChild(row);
            productIndex++;
        }

        function removeProduct(element) {
            const row = element.closest('tr');
            row.remove();
            calculateTotals();
        }

        function calculateRowTotal(input) {
            const row = input.closest('tr');
            const weight = parseFloat(row.querySelector('input[name*="[weight]"]').value) || 0;
            const rate = parseFloat(row.querySelector('input[name*="[rate]"]').value) || 0;
            const total = weight * rate;
            row.querySelector('.row-total').textContent = total.toFixed(2);
            calculateTotals();
        }

        function calculateTotals() {
            const rows = document.querySelectorAll('#product-list tr');
            let totalWeight = 0;
            let totalCost = 0;

            rows.forEach(row => {
                const weight = parseFloat(row.querySelector('input[name*="[weight]"]').value) || 0;
                const rate = parseFloat(row.querySelector('input[name*="[rate]"]').value) || 0;
                totalWeight += weight;
                totalCost += weight * rate;
            });

            document.getElementById('total-weight').textContent = totalWeight.toFixed(2);
            document.getElementById('total-cost').textContent = totalCost.toFixed(2);
        }

        function takeScreenshot() {
            const screenshotBtn = document.querySelector('.screenshot-btn');
            screenshotBtn.style.display = 'none';
            document.body.classList.add('taking-screenshot');

            // Get all input values and replace them with spans
            const rows = document.querySelectorAll('#product-list tr');
            const rowsData = [];
            
            rows.forEach(row => {
                const nameInput = row.querySelector('input[name*="[name]"]');
                const weightInput = row.querySelector('input[name*="[weight]"]');
                const rateInput = row.querySelector('input[name*="[rate]"]');
                const total = row.querySelector('.row-total');

                rowsData.push({
                    name: nameInput.value,
                    weight: weightInput.value,
                    rate: rateInput.value,
                    total: total.textContent
                });
            });

            // Create table rows HTML
            const rowsHtml = rowsData.map(data => `
                <tr>
                    <td>${data.name || ''}</td>
                    <td>${data.weight || '0.00'}</td>
                    <td>${data.rate || '0.00'}</td>
                    <td>${data.total || '0.00'}</td>
                    <td></td>
                </tr>
            `).join('');

            const totalWeight = document.getElementById('total-weight').textContent;
            const totalCost = document.getElementById('total-cost').textContent;

            const html = `
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset="UTF-8">
                    <style>
                        body {
                            padding: 40px;
                            background: white;
                            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                        }
                        .table-container {
                            margin-bottom: 40px;
                        }
                        table {
                            width: 100%;
                            border-collapse: collapse;
                        }
                        th, td {
                            padding: 20px;
                            border: 2px solid #ddd;
                            text-align: left;
                            font-size: 18px;
                        }
                        th {
                            background: #3498db;
                            color: white;
                            font-size: 20px;
                            font-weight: bold;
                        }
                        .totals {
                            margin-top: 40px;
                            padding: 30px;
                            border: 2px solid #ddd;
                            border-radius: 12px;
                            background: #f8f9fa;
                        }
                        .total-row {
                            display: flex;
                            justify-content: space-between;
                            padding: 15px 0;
                            font-size: 22px;
                            font-weight: 500;
                        }
                    </style>
                </head>
                <body>
                    <div class="table-container">
                        <table>
                            <thead>
                                <tr>
                                    <th>Item Name</th>
                                    <th>Weight</th>
                                    <th>Rate</th>
                                    <th>Total</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                ${rowsHtml}
                            </tbody>
                        </table>
                    </div>
                    <div class="totals">
                        <div class="total-row">
                            <span>Total Weight:</span>
                            <span>${totalWeight}</span>
                        </div>
                        <div class="total-row">
                            <span>Total Cost:</span>
                            <span>${totalCost}</span>
                        </div>
                    </div>
                </body>
                </html>
            `;

            screenshotBtn.style.display = 'block';
            document.body.classList.remove('taking-screenshot');

            fetch('/screenshot', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ html })
            })
            .then(response => {
                if (!response.ok) throw new Error('Network response was not ok');
                return response.blob();
            })
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'product-calculator.png';
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);
                a.remove();
            })
            .catch(error => {
                console.error('Error taking screenshot:', error);
                alert('Error taking screenshot. Please try again.');
            });
        }

        // Add initial row
        window.onload = addProduct;
    </script>
</body>
</html>